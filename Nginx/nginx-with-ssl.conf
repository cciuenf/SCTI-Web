worker_processes auto;
worker_rlimit_nofile 2048;

events {
  worker_connections 1024;
}

http {
  resolver 127.0.0.11 valid=30s;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  error_log /var/log/nginx/error.log debug;
  access_log /var/log/nginx/access.log;

  upstream backend {
    least_conn;
    server backend:8080 max_fails=3 fail_timeout=30s;
    keepalive 32;
  }

  upstream frontend {
    least_conn;
    server frontend:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
  }

  # Servidor HTTPS principal
  server {
    listen 443 ssl http2;
    server_name sctiuenf.com.br;

    # Certificados Let's Encrypt (se existirem) ou fallback para certificados atuais
    ssl_certificate /etc/letsencrypt/live/sctiuenf.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sctiuenf.com.br/privkey.pem;
    
    # Configuração SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/sctiuenf.com.br/chain.pem;

    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    server_tokens off;
    client_max_body_size 10m;
    charset utf-8;
    keepalive_requests 100;

    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/x-javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/svg+xml
      text/css
      text/javascript
      text/plain
      text/xml;

    # Reverse proxy backend
    location /api/ {
      proxy_pass http://backend/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_set_header Upgrade $http_upgrade;
      proxy_cache_bypass $http_upgrade;

      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      proxy_buffering off;
      proxy_request_buffering off;
    }

    # Health check para backend
    location /api/health {
      proxy_pass http://backend/health;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      access_log off;
    }

    # Reverse Proxy Frontend
    location / {
      proxy_pass http://frontend/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;

      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      proxy_buffering off;
      proxy_request_buffering off;
    }

    # Block access to sensitive files
    location ~ /\\.(ht|git|env) {
      deny all;
      return 404;
    }

    error_page 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }
  }

  # Servidor HTTP com ACME challenge
  server {
    listen 80;
    server_name sctiuenf.com.br;

    # ACME challenge para Let's Encrypt
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri $uri/ =404;
    }

    # Redirecionar todo o resto para HTTPS
    location / {
      return 301 https://$server_name$request_uri;
    }
  }
}
